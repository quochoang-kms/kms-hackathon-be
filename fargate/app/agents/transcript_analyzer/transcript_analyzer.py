import os
import sys
# sys.path.append(os.path.join(os.path.dirname(__file__), '..', '..'))

from strands import Agent
from dotenv import load_dotenv
from strands.models import BedrockModel

load_dotenv()

SYSTEM_PROMPT = """
You are a Youtube Transcript Analyzer, a specialized AI agent that analyzes Youtube video transcripts and returns structured JSON output using the JDResponse format.

When you receive a interview transcript, analyze it and respond with structured data including:
- Basic information (job title, company, location, etc.)
- Questions/Answers (questions asked, answers given)
- Key insights (skills, qualifications, etc.)
- Any other relevant information from the transcript.

Always respond using the JDResponse structured format.
"""

bedrock_model = BedrockModel(
  model_id=os.getenv("MODEL_ID"),
  region_name=os.getenv("REGION_NAME"),
)

transcript_analyzer = Agent(
  name="TRANSCRIPT_ANALYZER",
  model=bedrock_model,
  system_prompt=SYSTEM_PROMPT,
)


TRANSCRIPT = """
hello everyone we are back with another round of touring mark interview series i'm jose i'm tech leader turing and i'm from montreal canada and at duty i work on hiring the best engineer by helping with the vetting process i have more than 17 years of experience and my expertise lies in javascript today i will be interviewing james for the role of an experienced java developer so let's get started hey james well first of all uh how are you doing how is your day doing so far uh well thanks can't complain nice great so i'm doing great by the way as well so um let's get start this interview okay uh i will i would like to ask you please to tell me a little bit more about your professional background your professional experience okay and what kind of language and framework are you familiar with and then i can take from there sounds good sounds good uh okay yeah so i've been working you know as a software engineer since 2007 so got a fair bit of experience across different projects and platforms mostly initially java and then more recently mobile development specifically ios um but yeah all kinds of things over the years um yeah that's sort of professionally can get more specific if you like that yeah yeah okay so thanks for sharing so you we have almost the same time same experience work uh in the industry okay uh i went to the javascript site you went to the java side and that is amazing right so um could you please tell me uh a little bit about some exciting projects okay java project that you have been work on yeah so if we're just looking at the java stuff too that come to mind was uh one of my first projects was for coca-cola africa and that was quite interesting so it was a it was an environmental data tracking website written with struts and jsps and servlets i don't know if any of these are still used i think technology's changed a bit since then but it was very interesting at the time and it was used by bottling plants all over all over africa so that was that was my first job so it was quite a deep end i was tossed into another another interesting one was a java app that ran on a linux system which coincidentally although not the same job it was quite a few years later uh ran on qa machines in bottling plants so it you know the the system the software was used to configure the machines so they could check like bottle and can pressure and monitor for uh anything floating in the liquid or that kind of thing so and bottles being chipped or cracked or yeah so of my java apps those two were probably two of the more interesting ones nice and how how did you measure that do you have do you work with sensors arduinos how did you measure that the the qa one was a um the the physical devices were made in-house uh there's an american company called filtec and it was their kind of custom-made hardware and we had one of them in the in the office so we physically deployed to it over over ethernet actually and um yeah that's so that was the only way we could well that was how we could test it on a physical device okay that that was great what's the constructor okay what do you understand about constructor overloading java and constructor okay um a constructor is using conjunction with new to make a new object of any a new instance of any class in java um every class uh has one and if you don't create one the compiler will create a default constructor for you constructor overloading works the same way as method overriding allowing for different constructors of the same class as long as you provide a unique list of parameters for each this could be used to set default parameters uh similar functionality from some other languages that support that um or you could just handle your construction differently if different data is available so it's very customizable um copy constructors um is essentially using a constructor or giving a constructor an instance of the object that the constructor is trying to create a new version of um or a new instance of uh copying the data from the existing object into the new object to sort of create a clone of it and yeah so this it will create a clone right you know how it works how it works with the garbage collection so if it's a clone so if you update one it to update the other one it's a clone or a reference well in java classes are passed around by reference uh it and you don't have structs so you don't have to worry about um that kind of thing but it's up to you how you handle things in the constructor so for instance if the object that you're copying from has an object as part of its data um and you just set that value so say say for instance you you have a class that has a date and date is an object and then you want to make a new a new instance of your existing class if you just set the date object on your new instance to be equal to the date object on your old instance um and then you update the date on your old instance it's gonna update the date on your new instance too uh because uh as you mentioned um it's an object and it would be passed by reference so the a better way to handle it in your in your constructor would be to create a new date object using values from the existing date object on your object that you're copying so the um it's really the copy constructors put a lot of responsibility on you to make sure that you copy them properly or you will end up with some unintended behavior yeah good answer you you kind of kill my my next question would be sorry about that but uh but that's that's okay so i'm glad you uh you mentioned that so uh regarding exceptions in java okay so how do we handle accepts in java what are i mean what are the two types of exceptions okay and what what do you understand okay by the difference between them so in your own words okay the two types of exceptions are checked and unchecked exceptions unchecked exceptions include errors and every other type of exception that extends runtime exception as they as its base they're not checked at compile time you'll run into them if you usually only if you have logical errors and they will cause the app to crash  checked exceptions force you to handle them in code and your code won't compile if you don't either catch or throw them um so yeah on compile time it'll tell you if you aren't handling them properly and then you'll either have to write a try around them and handle them or throw them from your function makes sense all right so and so uh how how does a final block okay differ from a finalized method okay uh a final block is part of a try um it always executes when the try exits whether you um caught an exception or not and it's generally used um to you know clean up any code maybe if you were using files or something um in the temporary files or anything that you want to delete before leaving that section of code or memory you want to clear or anything like that finalize is a protected method of the base object class and is called by the garbage collector before it releases an object from memory it can be overwritten if you choose to and then sort of you use it for for the same kind of function if if there are you know if there's data or files that you want to clean up before the object is is deleted then finalize is the function to do that from great and as you mentioned uh protect that method so let's suppose we extend uh from that class could we overhide that method the finalized method or it's not possible i believe that it is possible but i don't try that very often um okay i will leave this answer okay i'll leave this sense for developers fellow that are watching this video let me know in the comment section below if we create a class and extend from the object class if we can um overhype the finalized method please leave a comment in the section below i will read all of them okay and go ahead okay i'm just gonna say you can definitely override protective functions of the object class but i'm not sure about overriding protected uh functions of classes that you've already overridden them in sorry that's what i thought yeah yes that's totally fine because uh you know in an interview i uh we as an interviewer we don't expect you know everything right so i believe nobody knows everything okay so that's totally fine if you say i don't know um and i much appreciate it so let's go back okay uh and let me ask another question so uh there's the garbled collection okay occur in a permanent generated space in gvm yes garbage collection does occur in firm gen space and if permgent space is full or crushes crosses a threshold it can trigger a full garbage collection if you look carefully at the output of the garbage collector you'll find that permgent space is also garbage collected this is the reason why the correct sizing of purging space is important to avoid frequent full garbage collections makes sense and so moving on okay um could you explain the life cycle of uh let's say of an applet yeah um applets go through five life cycle um stages uh the first one being initializing uh applets don't have main methods so each one starts its execution from the init method which is called once after that um the start method is called that's called when a browser is maximized as well um in between this paint the paint function should be used to display any content for the applet and stop uh is called when the browser is minimized or when you're closing the website down and destroys the final function or the final live stage you know of the applet um and it should completely close the applet and it's executed when it's closed yeah great and i have a follow-up question for you okay regarding app let's what's the difference between apple loaded over internet and apple load via the file system um when an applet is loaded over the internet it is loaded by the applet class loader and is subject to the restrictions enforced by the applet security manager if it is loaded from the client's local disk it's loaded by the file system loader applets loaded locally have a lot more access so they can read files write files and load libraries to on the client um also applets loaded by the file system are allowed to execute processes and finally they are not passed through the bytecode verifier essentially yeah if they're loaded from local they have a lot more access to the user's computer than once loaded over the internet yeah do we need to provide the user needs to provide any permission for for the appellate for them create files or delete files or if they just allow java it will work by default i'm not sure i think um it's run through the browser so i imagine if they allow java and the browser is trusted that they should work but that it should just work but i'm not 100 sure on that yeah it should uh it's not like javascript so in javascript we have the same to manipulate files but we need to ask permission to uh load camera audios write files uh have access to so uh yeah it's something like that so um let me move on and ask you uh what are the layers okay of a rmi active rmi architecture consists of the following layers the stub and skeleton layers the these layers lie just beneath the view of the developer slayer is responsible for intercepting method calls made by the client to the interface and redirecting those calls a remote rmi service the remote reference layer the second layer of the rmi architecture deals with the interpretation of references made from the client to the server's remote objects this layer interprets and manages references made from the clients to the remote service objects the connection is one-to-one link and the transport layer which is responsible for connecting the two jvms participating in the service this layer is based on tpd cpip connections between machines and network and it provides basic connectivity as well as some firewall penetration strategies nice you just killed my next question again i'm glad you did because i would ask you what is the main connective protocol that uh transport layer use but you are an answer so i'm grateful that so all right so let's move on what is dgc okay dgc and how does it work dgc stands for distributed garbage collection um rmi uses dgc for automatic garbage collection since rmi involves remote object references between you know ins different machines and jvms garbage collection can be quite difficult the dgc uses a reference counting algorithm to provide automatic memory reference management for remote objects basically so that your your remote computer doesn't de-allocate some object that's being referenced by another one in you know interface uh as you can see you can imagine yeah if you have a copy of the object or clone and that object makes some reference to another one the conversion collector won't delete them right well that's normal gauge collection yeah but the the dgc the whole point is because it's two like completely separate apps running that are just talking to each other that one mustn't you know de-allocate something that might be needed by the other one so it's a little more complex and that's the point of the dgc correct great so uh and why is it a string length function accurate i had to read this up because i wasn't yeah essentially it isn't accurate because it'll only account for the number of characters within the string which sounds like it should be accurate but in other words it'll fail to account for code points outside of what is called the bmp the basic multilingual plane that is code points with a value above u plus 1000. the reason is historical when java was first defined one of its goals was to treatable text as unicode but at this time unicode did not define code points outside of the bmp by the time unicode defined such code points it was too late for the c for char to be changed and that is a weird one yeah but it makes sense right all right so uh thanks james that was my last uh question for you okay normally we go to uh code questions and i will leave this for another video okay i'll just like to call couple more developer file here if you want to see how the code challenge or the code question for java works um all you need to do is just uh hit the like button subscribe to our channel if you are not subscribed already and comment down below i want to see the java code challenge and then we're going to make this video for you okay see you then don't forget to subscribe to tutoring.com don't forget to subscribe to our youtube channel like this video follow us on instagram linkedin facebook twitter uh clubhouse we have a lot of social networks so go ahead on uh community.turing.com we have a lot of events doing there we talk about java we talk about javascript python english we we help you to uh skill up your english skills okay and then until then so that was my pleasure so james you were really a great developer okay uh thanks for attending this interview today and i hope to see you again okay thank you very much i enjoyed it a lot it was a good time thank you and i hope to see you all in the next video bye
"""

response = transcript_analyzer(
  f"""Please analyze the following Youtube transcript for job interview insights: 
  {TRANSCRIPT}
  """
)


print(response)